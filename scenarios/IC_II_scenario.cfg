#textdomain wesnoth-wc
## macros may not be used inside translatable strings.

#define IC_II_CAMPAIGN_NAME_1P
_ "Invincibles Conquest 1p" #enddef

#define IC_II_CAMPAIGN_NAME_2P
_ "Invincibles Conquest 2p" #enddef

#define IC_II_CAMPAIGN_NAME_3P
_ "Invincibles Conquest 3p" #enddef

#define IC_II_CAMPAIGN_DESC_1P
    _ "A hybrid of the renowned randomized MP campaign World Conquest (WC) with the inventory system of Legend of the Invincibles (LotI). Adds LotI's inventory system and extra units into World Conquest gameplay.
(5 scenarios.)" #enddef

#define IC_II_CAMPAIGN_DESC_2P
    _ "AA hybrid of the renowned randomized MP campaign World Conquest (WC) with the inventory system of Legend of the Invincibles (LotI). Adds LotI's inventory system and extra units into World Conquest gameplay.
(5 scenarios.)" #enddef

#define IC_II_CAMPAIGN_DESC_3P
    _ "A hybrid of the renowned randomized MP campaign World Conquest (WC) with the inventory system of Legend of the Invincibles (LotI). Adds LotI's inventory system and extra units into World Conquest gameplay.
(5 scenarios.)" #enddef

#define IC2_HUMAN_DIFFICULTY IMAGE COLOR
"units/{IMAGE}.png~RC(magenta>{COLOR})"#enddef

#define IC2_NIGHTMARE_DIFFICULTY
"units/monsters/fire-dragon.png~CROP(0,0,160,160)~SCALE_INTO(72,72)~RC(magenta>red)"#enddef

#define IC2_CAMPAIGN_DIFFICULTY DIFFICULTY IMAGE LABEL DESCRIPTION POWER TRAINED HEROES GOLD TRAIN XP
    {CAMPAIGN_DIFFICULTY {DIFFICULTY} {IMAGE} {LABEL} {DESCRIPTION}}
    [event]
        name=preload
        # These events run for every difficulty, so this Lua block ensures only the active difficulty's
        # event actually fills the settings variable.
        [lua]
            code=<<
                if wesnoth.scenario.difficulty ~= (...).difficulty then
                    wesnoth.wml_actions["return"]{}
                end
            >>
            [args]
                difficulty={DIFFICULTY}
            [/args]
        [/lua]
        [set_variables]
            name=ic2_difficulty
            [value]
                name={LABEL}
                enemy_power={POWER}
                enemy_trained={TRAINED}
                heroes={HEROES}
                # adjust bonus gold for number of players
                extra_gold=$(gold * 2 ^ (3 - nplayers) where nplayers = $ic2_player_count, gold = {GOLD})
                extra_training={TRAIN}
                experience_penalty={XP}
            [/value]
        [/set_variables]
    [/event]
#enddef

# I know I can add them into the main campaign defines but it gets really messy if done that way so I prefer to keep my code clean

#define IC_ICON_ONE
    "misc/blank-hex.png~BLIT(units/elves/snowhunter+female-sword-2.png~RC(magenta>brown)~CROP(10,0,72,72))~BLIT(units/dwarves/battlerager-defend-2.png~FL()~RC(magenta>white)~CROP(0,0,60,67),15,5)"
#enddef

#define IC_ICON_TWO
    "misc/blank-hex.png~BLIT(units/important/delly-attack-3.png~RC(magenta>brown)~CROP(10,0,72,72),-15,-12)~BLIT(units/orcs/goblinwarbanner-attack-1.png~FL()~RC(magenta>darkblue)~CROP(0,0,60,67),20,15)"
#enddef

#define IC_ICON_THREE
    "misc/blank-hex.png~BLIT(units/enemies/flies-4.png~RC(magenta>darkred)~CROP(10,0,72,72),-20,-20)~BLIT(units/undead/abomination/abomination-attack-n-1-1.png~FL()~RC(magenta>darkblue)~CROP(10,10,80,80),5,0)"
#enddef

#define IMAGE_ONE
    "data/add-ons/Legend_of_the_Invincibles/images/dark_incantation.png~SCALE_INTO(800,600)"
#enddef

#define IC2_CAMPAIGN_NEW PLAYERS ICON
    [campaign]
        id = "IC_II_{PLAYERS}p"
        define = CAMPAIGN_IC_{PLAYERS}P
        name= {IC_II_CAMPAIGN_NAME_{PLAYERS}P}
        description = {IC_II_CAMPAIGN_DESC_{PLAYERS}P}
        first_scenario = "IC_II_{PLAYERS}p"
        min_players={PLAYERS}
        max_players={PLAYERS}
        icon = {ICON}
        image = {IMAGE_ONE}
        type = mp
        {LOTI_EXTRA_ADVANCEMENT_LINES}
        {LOTI_WC_EXTRA_ADVANCEMENT_LINES}
        extra_defines=ACCELERATE_AI,NO_LOTI
        abbrev = _ "LotI WC" + {PLAYERS}\
        {IC2_CAMPAIGN_DIFFICULTY VERY_EASY {IC2_HUMAN_DIFFICULTY human-peasants/peasant purple} {WC_STR_PEASANT} {WC_STR_BEGINNER} 6 2 2 10 yes 0}
        {IC2_CAMPAIGN_DIFFICULTY EASY {IC2_HUMAN_DIFFICULTY human-loyalists/sergeant black} {WC_STR_SERGEANT} {WC_STR_EASY} 7 3 2 7 yes 5}
        {IC2_CAMPAIGN_DIFFICULTY NORMAL {IC2_HUMAN_DIFFICULTY human-loyalists/lieutenant brown} {WC_STR_LIEUTENANT} {WC_STR_MEDIUM} 8 4 2 5 yes 10} {DEFAULT_DIFFICULTY}
        {IC2_CAMPAIGN_DIFFICULTY HARD {IC2_HUMAN_DIFFICULTY human-loyalists/general orange} {WC_STR_GENERAL} {WC_STR_HARD} 8 5 2 2 no 13}
        # Challenging is a string that exists in mainline but only in campaigns so it probably counts as adding a string?
        #textdomain wesnoth-httt
        {IC2_CAMPAIGN_DIFFICULTY VERY_HARD {IC2_HUMAN_DIFFICULTY human-loyalists/marshal white} {WC_STR_GRAND_MARSHAL} _"Challenging" 9 6 2 1 no 17}
        # Expert is a string that was supposed to be in wesnoth-wc but accidentally got added to wesnoth-units instead
        #textdomain wesnoth-units
        {IC2_CAMPAIGN_DIFFICULTY NIGHTMARE {IC2_NIGHTMARE_DIFFICULTY} {WC_STR_NIGHTMARE} _"Expert" 9 7 1 0 no 20}
        [options]
		[checkbox]
			id="ic2_config_enable_pya"
			default=yes
			name="Enable advancement mod"
			description="enables the mod to preselect what unit will advance into, disable this to be compatible with other mods that do the same thing"
		[/checkbox]
		[checkbox]
			id="ic2_config_enable_unitmarker"
			default=yes
			name="Enable unitmarker"
			description="enables the buildin mod to mark units, disable this to be compatible with other mods that do the same thing"
		[/checkbox]
	[/options]
        [about]
            title = _ "Invincible Conquest"
            [entry]
                name = "dwarftough"
            [/entry]
        [/about]
        [about]
            title = _ "Legend of the Invincibles"
            [entry]
                name = "Dugi"
            [/entry]
        [/about]
        [about]
            title = _ "World Conquest"
            [entry]
                name = "tekelili"
            [/entry]
            [entry]
                name = "gfgtdf"
                comment= "former maintainer"
            [/entry]
            [entry]
                name =  "Celtic Minstrel"
                comment= "intermittent maintainer"
            [/entry]
            [entry]
                name =  "Lord-Knightmare"
                comment= "intermittent maintainer"
            [/entry]
        [/about]
    [/campaign]
#enddef

#define IC2_SCENARIO_NEW TAG ID NAME PLAYERS
    ## Everything that usually goes into [scenario] like [event], [load_ressource], map_data
    ## etc is generated by lua. This is also why there is only one [scenario] tag: the next
    ## scenario is again "WC_II" and the lua code detects that is was called a second
    ## time and generates the second scenario. (Same for third, fourth and fifth). All the lua
    ## code inside ./lua/map does map/scenario generation.
    [{TAG}]
        id = {ID}
        name={NAME}
        allow_new_game=no
        scenario_generation=lua
        experience_modifier=100
        victory_when_enemies_defeated=yes
        carryover_percentage=0
        carryover_report=no
        carryover_add=no
        force_lock_settings=yes
        [generator]
            id={ID}
            config_name={NAME}
            nplayers={PLAYERS}
            create_scenario = <<
                local a = ...
                local function doit()
                    wesnoth.dofile('~add-ons/Invincibles_Conquest_II//lua/map/main.lua')
                    return wc_ii_generate_scenario(a.nplayers, a)
                end

                local status, res = xpcall(doit, function(e) std_print(e, debug.traceback()) end)
                if status then
                    return res
                else
                    print(res)
                    std_print(res)
                end
            >>
#ifdef EDITOR
            user_config = <<
                local a = ...
                local function doit()
                    wesnoth.dofile('~add-ons/Invincibles_Conquest_II//lua/map/main.lua');
                    wesnoth.dofile('~add-ons/Invincibles_Conquest_II//lua/map/settings/settings_dialog.lua');
                    return ic2_debug_settings()
                end

                local status, res = xpcall(doit, function(e) std_print(e, debug.traceback()) end)
                if status then
                    return res
                else
                    std_print(res)
                end
            >>
#endif
            nplayers={PLAYERS}
            [scenario]
                {DEFAULT_SCHEDULE}
                {DEFAULT_MUSIC_PLAYLIST}
                {DROPS_EXT 14 30 (sword,sword,sword,bow,bow,bow,staff,staff,staff,axe,axe,axe,xbow,dagger,knife,mace,mace,spear) yes "4,5,6,7,8,9" "1,2,3"}
                {LOTI_WC_GLOBAL_EVENTS}
            [/scenario]
        [/generator]
    [/{TAG}]
#enddef

{IC2_CAMPAIGN_NEW 1 {IC_ICON_ONE}}
{IC2_CAMPAIGN_NEW 2 {IC_ICON_TWO}}
{IC2_CAMPAIGN_NEW 3 {IC_ICON_THREE}}

#ifndef EDITOR

#ifdef CAMPAIGN_IC_1P
{IC2_SCENARIO_NEW scenario "IC_II_1p" {IC_II_CAMPAIGN_NAME_1P} 1}
#endif

#ifdef CAMPAIGN_IC_2P
{IC2_SCENARIO_NEW scenario "IC_II_2p" {IC_II_CAMPAIGN_NAME_2P} 2}
#endif

#ifdef CAMPAIGN_IC_3P
{IC2_SCENARIO_NEW scenario "IC_II_3p" {IC_II_CAMPAIGN_NAME_3P} 3}
#endif

#endif
